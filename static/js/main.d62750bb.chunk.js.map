{"version":3,"sources":["utils/index.js","components/searchResultItem.js","App.js","serviceWorker.js","index.js"],"names":["prependZero","x","slice","printTime","t","Math","round","h","floor","m","s","join","SearchResultItem","this","props","audio","queue","username","queueIndex","findIndex","el","id","className","title","filename","onClick","onQueueAudio","src","alt","class","toString","onRandomAudioLoaded","split","pop","owner","editAudioFilename","deleteAudio","React","PureComponent","pkg","require","options","apiRoot","localStorage","devserver","api_homepage","authToken","getItem","App","NETWORK_STATE","NETWORK_EMPTY","NETWORK_IDLE","NETWORK_LOADING","NETWORK_NO_SOURCE","READY_SUCCESS_STATE","state","params","currentAudio","xhrRand","attemptingLogin","currentTime","pause","playId","fetchingNext","firstPlay","playing","searchResults","searchTimeout","xhrSearch","unBindEvents","bindEvents","onLogin","e","preventDefault","usernameInput","value","password","passwordInput","$","ajax","url","data","dataType","method","done","onLoginSuccess","fail","onLoginFail","setState","addMobileListener","media","window","matchMedia","addListener","listenerIsMobile","response","token","user","setItem","console","log","playNext","swal","fetchRandomAudio","jqXhr","Date","headers","Authorization","r","onAjaxFail","push","newXhrRand","filter","xhr","readyState","newQueue","onfetchingError","clearAuthToken","onLogout","onCurrentAudioPlay","onYoutubeDlPrompt","a","content","videoId","ytVideoIdRe","pos","re","map","test","match","v","type","task_id","onYoutubeFail","status","audioInfo","length","nextAudio","shift","getAudioTitle","getAudioSrc","download_url","onSearchPrompt","togglePause","setAudioLength","duration","canPlay","loadAndPlayAudio","loading","loadProgress","networkState","onAudioLoadError","audioEnd","error","onAudioSeeked","setTimeout","onPauseAudio","onAudioPlay","target","eventsNames","waiting","canplay","ended","seeked","play","timeupdate","audioTimeUpdate","stalled","abort","onAudioAbort","bind","once","name","_events","addEventListener","removeEventListener","_pauseAudio","onTogglePlay","remember","saveLastPlayStatus","onAudioProgress","getBaseAudioInfo","getProgressText","getProgressPercentage","ignore","currentPlayId","playingAudio","loadAudio","musicSrc","load","searchInputKeyPress","which","query","clearTimeout","searchSongs","blur","onSubmitSearchForm","find","trigger","songs","song","element","attributes","defaultValue","newPath","onAudioDownload","downloadNode","setAttribute","click","onMP3Upload","newWindow","open","focus","onClickProgressBar","perc","pageX","progressBar","width","undefined","removeListener","ref","node","style","onSubmit","placeholder","href","contact_email","onKeyPress","key","version","preload","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d62750bb.chunk.js","sourcesContent":["//秒转换成 时间格式\nexport function formatTime(second) {\n    let i = 0;\n    let h = 0;\n    let s = parseInt(second);\n    if (s > 60) {\n      i = parseInt(s / 60);\n      s = parseInt(s % 60);\n      if (i > 60) {\n        h = parseInt(i / 60);\n        i = parseInt(i % 60);\n      }\n    }\n    // 补零\n    const zero = v => (v >> 0 < 10 ? `0${v}` : v);\n    if (h > 0) return [zero(h), zero(i), zero(s)].join(\":\");\n    else return [zero(i), zero(s)].join(\":\");\n  }\n  \n  export function createRandomNum(minNum, maxNum) {\n    return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n  }\n  \n  export function distinct(array) {\n    return array\n      .map(item => JSON.stringify(item))\n      .filter((item, idx, arry) => idx === arry.indexOf(item))\n      .map(item => JSON.parse(item));\n  }\n  \n  export const arrayEqual = arr1 => arr2 =>\n    JSON.stringify(arr1) === JSON.stringify(arr2);\n  \n  const s4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n  };\n  // Generate a pseudo-GUID by concatenating random hexadecimal.\n  export const uuId = () => {\n    return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  };\n  \n  export const isSafari = () => {\n    return (\n      /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)\n    );\n  };\n\n  export const prependZero = function(x){\n      return ('0' + x).slice(-2);\n  };\n  \n  export const printTime = function(t) {\n    t = Math.round(t);\n    var h = Math.floor(t / 3600),\n        m = Math.floor((t % 3600) / 60),\n        s = t % 60;\n    return [prependZero(h), prependZero(m), prependZero(s)].join(':');\n  };","\nimport React from \"react\";\n\nexport default class SearchResultItem extends React.PureComponent {\n  render() {\n    const { audio, queue, username } = this.props;\n    const queueIndex = queue.findIndex(el => el.id === audio.id);\n\n    return (\n    <div className=\"searchResultItem\" >\n      <span\n        className=\"link\"\n        title={audio.filename}\n        onClick={()=>this.props.onQueueAudio(audio)} >\n        <img\n          className=\"cover\"\n          src=\"/vinyl.jpg\"\n          alt=\"cover\" />\n        { (queueIndex !== -1) && \n          (<div class=\"queueNumber\">{(queueIndex+1).toString()}</div>)}\n      </span>\n      <span className=\"link\" title={audio.filename} onClick={()=>this.props.onRandomAudioLoaded(audio)}>{ audio.filename.split('/').pop() }</span>\n      { (username === audio.owner) && <span className=\"searchResultActions\">\n        <span\n          className=\"link\"\n          onClick={()=>this.props.editAudioFilename(audio)} >\n          <i className=\"fas fa-edit\"></i>\n        </span>\n        <span\n          className=\"link\"\n          onClick={()=>this.props.deleteAudio(audio)} >\n          <i className=\"fas fa-trash\"></i>\n        </span>\n      </span>}\n    </div>);\n  } \n}","import React from \"react\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\";\nimport { printTime } from \"./utils\";\nimport SearchResultItem from \"./components/searchResultItem\";\nimport \"./App.css\";\n\nconst pkg = require('../package.json');\n\nconst options = {\n  //audio lists model\n  apiRoot: localStorage.devserver || pkg.api_homepage,\n  authToken: localStorage.getItem('auth_token'),\n  username: localStorage.getItem('username'),\n};\n\nclass App extends React.PureComponent {\n  NETWORK_STATE = {\n    NETWORK_EMPTY: 0,\n    NETWORK_IDLE: 1,\n    NETWORK_LOADING: 2,\n    NETWORK_NO_SOURCE: 3\n  };\n  READY_SUCCESS_STATE = 4;\n  state = {\n    params: options,\n    currentAudio: {},\n    queue: [],\n    xhrRand: [],\n    attemptingLogin: false,\n    currentTime: 0,\n    pause: true,\n    playId:'',\n    fetchingNext: false,\n    firstPlay: true,\n    playing: false,\n    searchResults: [],\n    searchTimeout: null,\n    xhrSearch: null,\n  };\n\n  constructor() {\n    super();\n    console.log(this.state.params.authToken)\n  }\n\n  componentWillUnmount() {\n    this.unBindEvents(this.audio, undefined, false);\n    this.media.removeListener(this.listenerIsMobile);\n    this.media = undefined;\n  }\n  \n  componentDidMount() {\n    this.addMobileListener();\n    this.bindEvents(this.audio);\n    if(this.state.params.authToken) {\n      this.playNext();\n    }\n  }\n  unBindEvents = (...options) => {\n    this.bindEvents(...options);\n  };\n\n  onLogin = (e) => {\n    e.preventDefault();\n    const username = this.usernameInput.value,\n          password = this.passwordInput.value;\n    $.ajax({\n      url: this.state.params.apiRoot + '/login/',\n      data: {\n        username: username,\n        password: password\n      },\n      dataType: 'json',\n      method: 'POST'\n    })\n    .done(this.onLoginSuccess)\n    .fail(this.onLoginFail);\n    this.setState({attemptingLogin: true})\n  };\n  addMobileListener = () => {\n    this.media = window.matchMedia(\n      \"(max-width: 768px) and (orientation : portrait)\"\n    );\n    this.media.addListener(this.listenerIsMobile);\n  };\n  onLoginSuccess = (response) => {\n    const data = {\n      ...this.state.params,\n      authToken: response.token,\n      username: response.user.username\n    }\n    this.setState({\n      params: data,\n      attemptingLogin: false\n    });\n    localStorage.setItem('auth_token', response.token);\n    localStorage.setItem('username', response.user.username);\n    console.log('Login successful');\n    this.playNext();\n  }\n  onLoginFail = () => {\n    this.setState({attemptingLogin: false})\n    swal('Error', 'Username/Password do not match.', 'error');\n  }\n  fetchRandomAudio = () => {\n    const jqXhr = $.ajax({\n        url: this.state.params.apiRoot + '/songs/random?t='+(+new Date()),\n        method: 'GET',\n        dataType: 'json',\n        headers: {\n            Authorization: 'Token ' + this.state.params.authToken\n        }\n    })\n    .done((r)=>this.onRandomAudioLoaded(r))\n    .fail(this.onAjaxFail);\n\n    const xhrRand = this.state.xhrRand;\n    xhrRand.push(jqXhr);\n    const newXhrRand = xhrRand.filter(xhr => xhr.readyState !== 4);\n\n    this.setState({\n      xhrRand: newXhrRand,\n      fetchingNext: true,\n    });\n  };\n  onQueueAudio = (audio) => {\n    const newQueue = this.state.queue.filter(()=>true);\n    newQueue.push(audio);\n    this.setState({queue: newQueue});\n  };\n  onfetchingError = (e) => {\n    this.setState({\n      fetchingNext: false\n    });\n    this.onAjaxFail(e);\n  };\n  clearAuthToken = () => {\n    const data = {\n      ...this.state.params,\n      authToken: null\n    };\n    localStorage.setItem('auth_token', '');\n    this.setState({\n      params: data\n    });\n  }\n  onLogout = (e) => {\n    e.preventDefault();\n    if (!this.state.pause)this.onCurrentAudioPlay('-');\n    this.setState({\n      params: options,\n      currentAudio: {},\n      playId:'',\n      xhrRand: [],\n      attemptingLogin: false,\n      currentTime: 0,\n      pause: true,\n      fetchingNext: false,\n      firstPlay: true,\n      playing: false,\n    })\n    this.clearAuthToken();\n    $.ajax({\n      url: this.state.params.apiRoot + '/logout/',\n      method: 'POST',\n      headers: {\n          Authorization: 'Token ' + this.state.params.authToken\n      }\n    })\n    .done(e => {console.log('Logged out, token removed')});\n  }\n  onYoutubeDlPrompt = async () => {\n    const url = await swal(\"Enter a Youtube URL:\", {\n      content: \"input\",\n    })\n    let videoId = null;\n    const ytVideoIdRe = [\n      {pos: 1, re: /^([a-zA-Z0-9_-]{11})$/},\n      {pos: 4, re: /^(https?:\\/\\/)?(www\\.|m\\.)?youtube\\.com\\/watch\\?(.*&)?v=([a-zA-Z0-9_-]{11})(&.*)?#?$/},\n      {pos: 2, re: /^(https?:\\/\\/)?youtu\\.be\\/([a-zA-Z0-9_-]{11})(\\?.*)?#?$/}\n    ];\n    if (!url) {\n      return;\n    }\n    videoId = ytVideoIdRe.map(function(re) {\n      if (re.re.test(url)) {\n        return url.match(re.re)[re.pos];\n      }\n      return null;\n    }).filter(el => !!el)[0];\n    if (videoId) {\n      console.log('Sending intent to download video ' + videoId);\n      $.ajax(\n        {\n          url: this.state.params.apiRoot + '/youtube-dl/',\n          data: {\n            v: videoId\n          },\n          type: 'POST',\n          headers: {\n            Authorization: 'Token ' + this.state.params.authToken\n          }\n        }\n      )\n      .done(response => console.log('task id: ' + response.task_id))\n      .fail(e => this.onYoutubeFail(e, videoId));\n    } else {\n      swal('Error', 'Invalid Youtube URL', 'error');\n    }   \n  }\n  onYoutubeFail = (e, videoId) => {\n    if (e.status === 401) {\n      this.clearAuthToken();\n    } else {\n      swal('Oops!', 'Youtube download ' + videoId + ' did not go through...', 'error');\n    }\n  }\n  onAjaxFail = (e) => {\n    if (e.status === 401) {\n      this.clearAuthToken();\n    }\n  }\n  onRandomAudioLoaded = audioInfo => {\n    console.log('GOTCHA!!! ', audioInfo)\n    this.setState({\n      fetchingNext: false,\n      currentAudio: audioInfo,\n    });\n  }\n  playNext = () => {\n    console.log('NEXT!!!')\n    this.setState({\n      playId: '',\n      currentAudio: {}\n    });\n    if (this.state.queue.length > 0) {\n      const newQueue = this.state.queue.filter(() => true);\n      const nextAudio = newQueue.shift();\n      this.setState({queue: newQueue});\n      this.onRandomAudioLoaded(nextAudio);\n      return\n    }\n    if (!this.state.fetchingNext) {\n      this.fetchRandomAudio(true)\n      console.log('FETCH!!!')\n    }\n  }\n  getAudioTitle = () => {\n    const { filename } = this.state.currentAudio;\n    return filename ? filename.split('/').pop() : '-'\n  }\n  getAudioSrc = () => {\n    const { currentAudio, params: { authToken } } = this.state;\n    return currentAudio.download_url ? currentAudio.download_url + '.mp3?auth_token=' + authToken : null;\n  }\n  onSearchPrompt = () => {\n  }\n  togglePause = () => {\n\n  }\n  setAudioLength = () => {\n    this.setState({\n      duration: this.audio.duration\n    });\n  };\n  canPlay = () => {\n    this.setAudioLength();\n    this.loadAndPlayAudio();\n    this.setState({\n      loading: false,\n      playing: false\n    });\n  };\n  loadAndPlayAudio = () => {\n    const { loadProgress, firstPlay } = this.state;\n    const { networkState } = this.audio;\n    const maxLoadProgress = 100;\n    this.setState({ loading: true });\n    if (loadProgress < maxLoadProgress) {\n      this.setState({ loadProgress: loadProgress + 1 });\n    }\n    if (\n      networkState !== this.NETWORK_STATE.NETWORK_NO_SOURCE\n    ) {\n      \n      this.setState(\n        {\n          playing: !firstPlay,\n          loading: false,\n          pause: firstPlay,\n          loadProgress: maxLoadProgress\n        },\n        () => {\n          if (firstPlay) {\n            //this.audio.play();\n          }\n          this.setState({ firstPlay: false });\n        }\n      );\n    } else {\n      this.onAudioLoadError();\n    }\n  };\n  audioEnd = () => {\n    this.playNext();\n  };\n  onAudioLoadError = e => {\n    if (this.audio.error) {\n      console.log('Audio error ', this.audio.error);\n      this.playNext();\n    }\n  };\n  onAudioSeeked = () => {\n    if (this.state.playing) {\n      this.loadAndPlayAudio();\n      setTimeout(() => {\n         this.setState({ playing: true });\n      });\n    }\n  };\n  onPauseAudio = () => {\n  };\n  onAudioPlay = () => {\n    this.setState({ playing: true, loading: false });\n  };\n  bindEvents = (\n    target = this.audio,\n    eventsNames = {\n      waiting: this.loadAndPlayAudio,\n      canplay: this.canPlay,\n      error: this.onAudioLoadError,\n      ended: this.audioEnd,\n      seeked: this.onAudioSeeked,\n      pause: this.onPauseAudio,\n      play: this.onAudioPlay,\n      timeupdate: this.audioTimeUpdate,\n      stalled: this.onAudioLoadError,\n      abort: this.onAudioAbort\n    },\n    bind = true\n  ) => {\n    const { once } = this.props;\n    for (let name in eventsNames) {\n      const _events = eventsNames[name];\n      bind\n        ? target.addEventListener(name, _events, {\n            once: !!(once && name === \"play\")\n          })\n        : target.removeEventListener(name, _events);\n    }\n  };\n  onAudioAbort = e => {\n      this.audio.pause()\n      this.audio.play();\n  };\n  _pauseAudio = () => {\n    this.audio.pause();\n    this.setState({ playing: false, pause: true });\n  };\n  onTogglePlay = () => {\n    const { playId } = this.state;\n    this.onCurrentAudioPlay(playId);\n  }\n  audioTimeUpdate = () => {\n    const currentTime = this.audio ? this.audio.currentTime : 0;\n    this.setState({ currentTime });\n    if (this.props.remember) {\n      this.saveLastPlayStatus();\n    }\n    this.props.onAudioProgress &&\n      this.props.onAudioProgress(this.getBaseAudioInfo());\n  };\n  getProgressText = () => {\n    const { currentTime } = this.state;\n    const duration = this.audio ? this.audio.duration : 0;\n    return printTime(currentTime) + '/' + printTime(duration);\n  };\n  getProgressPercentage = () => {\n    const { currentTime } = this.state;\n    const duration = this.audio ? this.audio.duration : 0;\n    return duration ? currentTime / duration * 100 : 0;\n  }\n  onCurrentAudioPlay = (playId, ignore = false) => {\n    const { playId: currentPlayId, pause, playing, currentAudio } = this.state;\n\n    if (!currentAudio.id) {\n      /*eslint-disable no-console*/\n      console.log('no audio')\n      /*eslint-disable no-console*/\n    }\n    if (playId === currentPlayId && !ignore) {\n      this.setState({ pause: !pause, playing: !playing });\n      if (pause) {\n        this.audio.play();\n      } else {\n        this.audio.pause();\n      }\n      return \n    }\n\n    const playingAudio = playId === currentAudio.id ? currentAudio : {}\n    const loadAudio = musicSrc => {\n      this.setState(\n        {\n          currentTime: 0,\n          duration: 0,\n          playing: false,\n          loading: true,\n          loadProgress: 0,\n          currentAudio: playingAudio,\n          playId,\n        },\n        () => {\n          this.audio.load();\n        }\n      );\n    };\n\n    loadAudio(this.getAudioSrc());\n  };\n  searchInputKeyPress = (e) => {\n    if (e.which === 13) {\n      const query = e.target.value;\n      console.log('Searching', query);\n      if (this.state.searchTimeout) {\n        clearTimeout(this.state.searchTimeout);\n      }\n      const searchTimeout = setTimeout(\n        () => this.searchSongs(query),\n        0,\n      );\n      this.setState({searchTimeout});\n      e.target.blur()\n    }\n  }\n  onSubmitSearchForm = (e) => {\n    e.preventDefault();\n    $(e.target).find('.searchInput').trigger('keypress');\n  }\n  searchSongs = function(query) {\n    if (this.state.xhrSearch) {\n      this.state.xhrSearch.abort();\n    }\n    const xhrSearch = $.ajax({\n      url: this.state.params.apiRoot + '/songs/',\n      data: {'q': query},\n      method: 'GET',\n      dataType: 'json',\n      headers: {\n          Authorization: 'Token ' + this.state.params.authToken\n      }\n    }).done(songs => {\n        this.setState({xhrSearch: null});\n        console.log('Found ' + songs.length + ' match for query \"' + query + '\"');\n        this.setState({searchResults: songs});\n    }).fail(e => {\n        if (e.status === 401) {\n            this.clearAuthToken();\n        }\n        this.setState({searchResults: []});\n    });\n    this.setState({xhrSearch: xhrSearch});\n  };\n  deleteAudio = async (song) => {\n    const { apiRoot, authToken } = this.state.params;\n    const hasConfirmed = await swal('Are you sure you want to delete this file \"'+song.filename.split('/').pop()+'\"?');\n    if (hasConfirmed) {\n      $.ajax({\n        url: apiRoot + '/songs/' + song.id,\n        method: 'DELETE',\n        dataType: 'JSON',\n        headers: {\n          Authorization: 'Token ' + authToken\n        }\n      }).done(() => {\n        console.log('Song ' + song.id + ' Deleted');\n        const searchResults = this.state.searchResults.filter(s => s.id !== song.id);\n        this.setState({searchResults});\n        //queue = queue.filter(function(s) {return s.id !== song.id});\n        if (this.state.currentAudio.id === song.id) {\n          this.playNext();\n        }\n      }).fail(function (e) {\n        if (e.status === 401) {\n          this.clearAuthToken();\n        }\n      });\n    }\n  };\n  editAudioFilename = async function(song) {\n    var newPath = await swal('new file path', {\n      content: {\n        element: 'input',\n        attributes: {\n          defaultValue: song.filename,\n        }\n      }\n    });\n    if (newPath && newPath !== song.filename) {\n        const { apiRoot, authToken } = this.state.params;\n        $.ajax({\n            url: apiRoot + '/songs/'+song.id,\n            method: 'PATCH',\n            data: {filename: newPath},\n            dataType: 'JSON',\n            headers: {\n              Authorization: 'Token ' + authToken\n            }\n        }).done(() => {\n          console.log('Filename changed from '+ song.filename + ' to ' + newPath);\n          const searchResults = this.state.searchResults.map(s => {\n            if(s.id !== song.id) {\n              return s\n            }\n            s.filename = newPath;\n            return s;\n          });\n          this.setState({searchResults});\n        }).fail(e => {\n          if (e.status === 401) {\n            this.clearAuthToken()\n          } else {\n            swal('Something went wrong...', '', 'error');\n          }\n        });\n    }\n  };\n  onAudioDownload = audio => {\n    const { authToken } = this.state.params;\n    const name = audio.filename ? audio.filename.split('/').pop() + '.mp3' : '';\n    const url = audio.download_url + '.mp3?auth_token=' + authToken\n    if (name && url) {\n      this.downloadNode.setAttribute(\"download\", name);\n      this.downloadNode.setAttribute(\"name\", name);\n      this.downloadNode.setAttribute(\"href\", url);\n      this.downloadNode.click();\n    }\n  };\n  onMP3Upload = () => {\n    const newWindow = window.open('/mp3-upload.html', 'upload', 'height=480,width=640');\n    if (window.focus) {\n       newWindow.focus()\n    }\n    return false;\n  };\n  onClickProgressBar = e => {\n    var perc = e.pageX/$(this.progressBar).width();\n    if (this.audio) {\n      var target = this.audio.duration * perc\n      console.log('Seek song ' + printTime(target));\n      this.audio.currentTime = target;\n    }\n  };\n  render() {\n    const { \n      params: { authToken, username},\n      currentAudio,\n      attemptingLogin,\n      pause,\n      searchResults,\n      xhrSearch,\n      queue\n    } = this.state;\n\n    return (\n      <div>\n        { authToken &&\n         <div\n          className=\"progressbar\"\n          onClick={this.onClickProgressBar}\n          ref={node => (this.progressBar = node)}\n          >\n          <div\n           className=\"progressbarBar\"\n           title={this.getProgressText()}\n           style={{width: (this.getProgressPercentage() + '%')}}\n          ></div>\n        </div>}\n        { authToken && !currentAudio &&\n          <div id=\"loading\">\n            <i className=\"fas fa-spinner fa-spin\"></i> Loading\n          </div>\n        }\n        { !authToken && <div className=\"loginComponent\">\n          <form className=\"loginForm\" onSubmit={this.onLogin}>\n            <div className=\"usernameInputWrapper\">\n              <input  \n                ref={node => (this.usernameInput = node)}\n                type=\"text\"\n                className=\"usernameInput\"\n               placeholder=\"Username\" />\n            </div>\n            <div className=\"passwordInputWrapper\">\n              <input \n                ref={node => (this.passwordInput = node)}\n                type=\"password\"\n                className=\"passwordInput\"\n                placeholder=\"Password\"/>\n            </div>\n            <div>\n              <button type=\"submit\" className=\"loginBtn myBtn\">\n                <i className={!attemptingLogin ? \"fas fa-sign-in-alt fa-fw\" : 'fas fa-spinner fa-spin'}></i> Login\n              </button>\n            </div>\n          </form>\n          <p><small>This app offers its users the pleasure to listen to their favourite songs in a good old stereo fashion.<br/>No surround sound bullshit here, Good old MPEG-1 standard only.</small></p>\n          <p><small>Contact: <a href={'mailto:' + pkg.contact_email}>{pkg.contact_email}</a></small></p>\n        </div>}\n        { authToken && <div className=\"jukebox\">\n          <div className=\"iconMenu\">\n            <span>\n              <img\n                className={\"mainCover\" + (pause ? \"\" : \" rotate\")} \n                src={currentAudio.download_url ? currentAudio.download_url + '.jpg?auth_token=' + authToken : '/vinyl.jpg'}\n                alt=\"\"\n              />\n            </span>\n            <span\n              className=\"playPauseButton link\"\n              onClick={this.onTogglePlay}\n              title=\"Play/Pause\">\n              <i className={pause ? \"fas fa-fw fa-play\" : \"fas fa-fw fa-pause\"}></i>\n            </span>\n            <span\n              onClick={this.playNext} \n              title=\"Next\"\n              className=\"link\">\n              <i className=\"fas fa-fw fa-forward\"></i>\n            </span>\n            <span\n              onClick={this.onYoutubeDlPrompt} \n              title=\"Import From Youtube\"\n              className=\"link youtube\">\n              <i className=\"fab fa-fw fa-youtube\"></i>\n            </span>\n            <span\n              onClick={() => this.onAudioDownload(currentAudio)} \n              title=\"Download\"\n              className=\"link\">\n              <a\n                href={this.getAudioSrc()}\n                ref={node => (this.downloadNode = node)}\n              >\n                <i className=\"fas fa-fw fa-cloud-download-alt\"></i>\n              </a>\n            </span>\n            <span\n              onClick={() => this.onMP3Upload(currentAudio)} \n              title=\"MP3 Upload\"\n              className=\"link\">\n             <i className=\"fas fa-fw fa-upload\"></i>\n            </span>\n            <span\n              onClick={this.onLogout}\n              title=\"Sign out\"\n              className=\"logoutBtn link\">\n                <i className=\"fas fa-fw fa-sign-out-alt\"></i>\n            </span>\n          </div>\n          <div className=\"currentTitle\">Now Playing: <span id=\"currentTitle\">{this.getAudioTitle() || '-'}</span></div>\n          \n          <p className=\"searchInputWrapper\">\n            <form className=\"searchForm\" onSubmit={this.onSubmitSearchForm}><input type=\"search\" onKeyPress={this.searchInputKeyPress} className=\"searchInput\" placeholder=\"Search\"/></form>\n          </p>\n          <div className=\"searchResults\">\n            { xhrSearch &&\n              <i className=\"fas fa-spin fa-2x fa-compact-disc\"></i>\n            }\n            { !xhrSearch &&\n              searchResults.map(audio => (\n                <SearchResultItem\n                  key={audio.id}\n                  audio={audio}\n                  username={username}\n                  queue={queue}\n                  onQueueAudio={this.onQueueAudio}\n                  onRandomAudioLoaded={this.onRandomAudioLoaded.bind(this)}\n                  deleteAudio={this.deleteAudio.bind(this)}\n                  editAudioFilename={this.editAudioFilename.bind(this)} />)\n              )\n            }\n          </div>\n        </div>\n        }\n        <div className=\"version\">\n          <small>{' v' + pkg.version}</small>\n        </div>\n        <audio\n          key=\"audio\"\n          className=\"music-player-audio\"\n          preload=\"auto\"\n          src={this.getAudioSrc()}\n          ref={node => (this.audio = node)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}