{"version":3,"sources":["utils/index.js","react-music-player/src/components/PlayerMobile.js","react-music-player/src/index.js","App.js","serviceWorker.js","index.js"],"names":["formatTime","second","i","h","s","parseInt","zero","v","join","createRandomNum","minNum","maxNum","Math","random","s4","toString","substring","uuId","prefix","PlayModeTip","visible","title","text","className","cls","show","PlayerMobile","name","cover","singer","playing","duration","currentTime","loading","loadingIcon","themeSwitch","progressBar","audioNextPlay","openAudioListsPanel","audioPrevPlay","nextAudioIcon","prevAudioIcon","playIcon","pauseIcon","playMode","downloadIcon","reloadIcon","pause","playListsIcon","closeIcon","onClose","playModeTipVisible","currentPlayModeName","extendsContent","onPlay","glassBg","LyricComponent","key","src","alt","onClick","length","map","content","undefined","IS_MOBILE","isMobile","AnimatePlayIcon","AnimatePauseIcon","Load","PlayModel","value","classNames","CircleProcessBar","progress","r","_progress","toFixed","perimeter","PI","strokeDasharray","cx","cy","fill","sliderBaseOptions","min","step","trackStyle","backgroundColor","handleStyle","border","ReactJkMusicPlayer","props","initPlayId","audioListRemoveAnimateTime","NETWORK_STATE","NETWORK_EMPTY","NETWORK_IDLE","NETWORK_LOADING","NETWORK_NO_SOURCE","READY_SUCCESS_STATE","state","currentAudio","playId","musicSrc","currentLyric","toggle","isLoop","isMute","soundValue","isDrag","currentX","currentY","moveX","moveY","isMove","audioListsPanelVisible","playModelNameVisible","theme","darkThemeName","currentAudioVolume","initAnimate","isInitAutoplay","isInitRemember","loadProgress","removeId","isNeedMobileHack","audioLyricVisible","togglePlayMode","index","_PLAY_MODE_","findIndex","_PLAY_MODE_LENGTH_","setState","onPlayModeChange","PLAY_MODE","clearTimeout","playModelTimer","setTimeout","playModeShowTime","renderPlayModeIcon","IconNode","animateName","audioListsPlay","ignore","currentPlayId","console","warn","audio","play","_pauseAudio","id","loadAudio","load","onAudioPlayTrackChange","getBaseAudioInfo","then","originMusicSrc","onAudioLoadError","resetAudioStatus","initPlayInfo","deleteAudioLists","audioId","e","stopPropagation","newAudioLists","filter","handlePlay","onAudioListsChange","onAudioListsPanelChange","closeAudioListsPanel","themeChange","isLight","lightThemeName","onThemeChange","onAudioDownload","downloadNode","document","createElement","setAttribute","click","controllerMouseMove","deltaX","deltaY","abs","openPanelPeriphery","controllerMouseUp","x","y","loadAndPlayAudio","openPanel","controllerMouseOut","preventDefault","onHandleProgress","onSound","setAudioVolume","volume","stopAll","target","getBoundingClientRect","ele","left","top","audioLoop","onAudioReload","toggleMode","onModeChange","toggleModeName","full","onHidePanel","mini","onAudioPlay","canPlay","setAudioLength","autoPlay","onPauseAudio","onAudioPause","remember","networkState","getLastPlayStatus","isLastPause","loadAudioErrorPlayNext","info","audioInfo","errMsg","error","isNext","audioLists","audioListsLen","currentPlayIndex","randomIndex","randomPlayId","audioEnd","onAudioEnded","audioPrevAndNextBasePlayHandle","audioTimeUpdate","saveLastPlayStatus","onAudioProgress","audioSoundChange","onAudioVolumeChange","onAudioSeeked","onMute","onAudioAbort","_err","Object","assign","mode","audioListsDragEnd","fromIndex","toIndex","_audioLists","item","splice","_playId","onAudioListsDragEnd","lastPlayStatus","JSON","stringify","localStorage","setItem","defaultPlayMode","status","defaultPlayIndex","getDefaultPlayId","parse","getItem","mockAutoPlayForMobile","bindMobileAutoPlayEvents","addEventListener","once","bindSafariAutoPlayEvents","unBindEvents","bindEvents","eventsNames","waiting","canplay","ended","seeked","timeupdate","volumechange","stalled","abort","bind","_events","removeEventListener","getPlayInfo","lastAudioLists","log","playIndex","find","pop","cb","listenerIsMobile","matches","addMobileListener","media","window","matchMedia","addListener","setDefaultAudioVolume","defaultVolume","max","targetId","playModeText","order","orderLoop","singleLoop","shufflePlay","values","this","controllerTitle","closeText","openText","drag","style","showDownload","showPlay","showReload","showPlayMode","showThemeSwitch","checkedText","unCheckedText","showMiniModeCover","showProgressLoadBar","bounds","defaultPosition","showMiniProcessBar","preload","preloadState","_playMode_","currentPlayMode","isShowMiniModeCover","backgroundImage","_currentTime","_duration","progressHandler","onChange","onAfterChange","ProgressBar","ceil","defaultValue","DownloadComponent","ThemeSwitchComponent","checkedChildren","unCheckedChildren","checked","ReloadComponent","onTouchStart","PlayModeComponent","miniProcessBarR","AudioController","position","onDrag","onStop","onStart","width","ref","node","playBtn","muted","readyState","played","paused","startDate","currentPlay","val","removeListener","test","navigator","userAgent","PureComponent","defaultProps","panelTitle","notContentText","showLyric","remove","emptyLyricPlaceholder","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","options","apiRoot","devserver","authToken","xhrRand","fetchingNext","showSearchModal","App","params","onLogin","username","$","password","ajax","url","data","dataType","method","done","onLoginSuccess","fail","onLoginFail","response","token","fetchRandomSong","swal","autoplay","jqXhr","Date","headers","Authorization","onRandomSongLoaded","onAjaxFail","push","newXhrRand","xhr","onfetchingError","clearAuthToken","onLogout","onYoutubeDlPrompt","a","videoId","ytVideoIdRe","pos","re","match","el","type","task_id","onYoutubeFail","songInfo","download_url","filename","split","playNext","playById","audioList","onSearchPrompt","extendComponents","poster","playsInline","loop","class","onSubmit","placeholder","next","err","marginBottom","zIndex","bottom","overflow","icons","columns","field","render","rowData","height","borderRadius","verticalAlign","query","q","search","result","slice","page","pageSize","totalCount","actions","icon","FaPlayCircle","tooltip","event","React","Boolean","location","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4db90823.chunk.js","sourcesContent":["//秒转换成 时间格式\nexport function formatTime(second) {\n    let i = 0;\n    let h = 0;\n    let s = parseInt(second);\n    if (s > 60) {\n      i = parseInt(s / 60);\n      s = parseInt(s % 60);\n      if (i > 60) {\n        h = parseInt(i / 60);\n        i = parseInt(i % 60);\n      }\n    }\n    // 补零\n    const zero = v => (v >> 0 < 10 ? `0${v}` : v);\n    if (h > 0) return [zero(h), zero(i), zero(s)].join(\":\");\n    else return [zero(i), zero(s)].join(\":\");\n  }\n  \n  export function createRandomNum(minNum, maxNum) {\n    return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);\n  }\n  \n  export function distinct(array) {\n    return array\n      .map(item => JSON.stringify(item))\n      .filter((item, idx, arry) => idx === arry.indexOf(item))\n      .map(item => JSON.parse(item));\n  }\n  \n  export const arrayEqual = arr1 => arr2 =>\n    JSON.stringify(arr1) === JSON.stringify(arr2);\n  \n  const s4 = () => {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n  };\n  // Generate a pseudo-GUID by concatenating random hexadecimal.\n  export const uuId = () => {\n    return `${s4() + s4()}-${s4()}-${s4()}-${s4()}-${s4()}${s4()}${s4()}`;\n  };\n  \n  export const isSafari = () => {\n    return (\n      /Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent)\n    );\n  };\n  ","import React, { Fragment } from \"react\";\nimport cls from \"classnames\";\n\nconst prefix = \"react-jinke-music-player-mobile\";\n\nexport const PlayModeTip = ({ visible, title, text }) => (\n  <div className={cls(`${prefix}-play-model-tip`, { show: visible })}>\n    <span className=\"title\">{title}</span>\n    <span className=\"text\">{text}</span>\n  </div>\n);\n\nconst PlayerMobile = ({\n  name,\n  cover,\n  singer,\n  playing,\n  duration,\n  currentTime,\n  loading,\n  loadingIcon,\n  themeSwitch,\n  progressBar,\n  openAudioListsPanel,\n  audioPrevPlay,\n  audioNextPlay,\n  prevAudioIcon,\n  nextAudioIcon,\n  playIcon,\n  pauseIcon,\n  playMode,\n  downloadIcon,\n  reloadIcon,\n  playListsIcon,\n  closeIcon,\n  onClose,\n  pause,\n  playModeTipVisible,\n  currentPlayModeName,\n  extendsContent,\n  onPlay,\n  glassBg,\n  LyricComponent\n}) => (\n  <div className={cls(prefix, { \"default-bg\": !glassBg, \"glass-bg\": glassBg })}>\n    <PlayModeTip\n      visible={playModeTipVisible}\n      title={playMode}\n      text={currentPlayModeName}\n    />\n    <div className={`${prefix}-header group`}>\n      <div className=\"left item\" />\n      <div className=\"title\" key=\"audio-title\">\n        {name}\n      </div>\n    </div>\n    <div className={`${prefix}-singer text-center group`}>\n      <span className=\"name\" key=\"singer-name\">\n        {singer}\n      </span>\n    </div>\n    <div className={`${prefix}-switch text-center group`}>{themeSwitch}</div>\n    <div className={`${prefix}-cover text-center`}>\n      <img\n        src={cover}\n        alt=\"cover\"\n        key=\"cover\"\n        className={cls(\"cover\", {\n          \"img-rotate-pause\": pause || !playing || !cover\n        })}\n      />\n    </div>\n    <div className={`${prefix}-progress group`}>\n      <span key=\"current-time\" className=\"current-time\">\n        {loading ? \"--\" : currentTime}\n      </span>\n      {progressBar}\n      <span key=\"duration\" className=\"duration text-right\">\n        {loading ? \"--\" : duration}\n      </span>\n    </div>\n    <div className={`${prefix}-toggle text-center group`}>\n      {loading ? (\n        loadingIcon\n      ) : (\n        <Fragment>\n          <span\n            className=\"group prev-audio\"\n            key=\"prev-audio\"\n          >\n          </span>\n          <span\n            className=\"group play-btn\"\n            title={playing ? \"Click to pause\" : \"Click to play\"}\n            key=\"play-btn\"\n            onClick={onPlay}\n          >\n            {playing ? pauseIcon : playIcon}\n          </span>\n          <span\n            className=\"group next-audio\"\n            title=\"Next track\"\n            key=\"next-audio\"\n            onClick={audioNextPlay}\n          >\n            {nextAudioIcon}\n          </span>\n        </Fragment>\n      )}\n    </div>\n    <div className={`${prefix}-operation group`}>\n      <ul className=\"items\">\n        <li className=\"item\" key=\"item-player-mode\">\n          {playMode}\n        </li>\n        <li className=\"item\" key=\"item-download-icon\">\n          {downloadIcon}\n        </li>\n        <li className=\"item\" key=\"item-reload-icon\">\n          {reloadIcon}\n        </li>\n        {extendsContent && extendsContent.length >= 1\n          ? extendsContent.map((content, i) => {\n              return (\n                <li className=\"item\" key={i}>\n                  {content}\n                </li>\n              );\n            })\n          : undefined}\n        <li className=\"item\">{LyricComponent}</li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default PlayerMobile;\n","/**\n * @version 4.3.4\n * @name react-jinke-music-player\n * @description Maybe the best beautiful HTML5 responsive player component for react :)\n * @author Jinke.Li <1359518268@qq.com>\n */\n\nimport React, { PureComponent, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport isMobile from \"is-mobile\";\nimport Slider from \"rc-slider/lib/Slider\";\nimport Switch from \"rc-switch\";\nimport {\n  formatTime,\n  createRandomNum,\n  uuId,\n  isSafari\n} from \"../../utils\";\nimport AudioPlayerMobile from \"./components/PlayerMobile\";\nimport Draggable from \"react-draggable\";\n\nimport FaHeadphones from \"react-icons/lib/fa/headphones\";\nimport FaMinusSquareO from \"react-icons/lib/fa/minus-square-o\";\nimport FaPlayCircle from \"react-icons/lib/fa/play-circle\";\nimport FaPauseCircle from \"react-icons/lib/fa/pause-circle\";\nimport Reload from \"react-icons/lib/fa/refresh\";\nimport MdVolumeDown from \"react-icons/lib/md/volume-up\";\nimport MdVolumeMute from \"react-icons/lib/md/volume-off\";\nimport Download from \"react-icons/lib/fa/cloud-download\";\nimport LoadIcon from \"react-icons/lib/fa/spinner\";\nimport LoopIcon from \"react-icons/lib/md/repeat-one\";\nimport RepeatIcon from \"react-icons/lib/md/repeat\";\nimport ShufflePlayIcon from \"react-icons/lib/ti/arrow-shuffle\";\nimport OrderPlayIcon from \"react-icons/lib/md/view-headline\";\nimport PlayLists from \"react-icons/lib/md/queue-music\";\nimport NextAudioIcon from \"react-icons/lib/md/skip-next\";\nimport PrevAudioIcon from \"react-icons/lib/md/skip-previous\";\nimport CloseBtn from \"react-icons/lib/md/close\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"rc-switch/assets/index.css\";\n\nconst IS_MOBILE = isMobile();\n\nexport const AnimatePlayIcon = () => (\n  <FaPlayCircle className=\"react-jinke-music-player-play-icon\" />\n);\nexport const AnimatePauseIcon = () => (\n  <FaPauseCircle className=\"react-jinke-music-player-pause-icon\" />\n);\n\nexport const Load = () => (\n  <span className=\"loading group\" key=\"loading\">\n    <LoadIcon />\n  </span>\n);\n\nexport const PlayModel = ({ visible, value }) => (\n  <div\n    className={classNames(\"play-mode-title\", {\n      \"play-mode-title-visible\": visible\n    })}\n    key=\"play-mode-title\"\n  >\n    {value}\n  </div>\n);\n\n//迷你模式进度条\nexport const CircleProcessBar = ({ progress = 0, r = 40 } = {}) => {\n  const _progress = progress.toFixed(2);\n  const perimeter = Math.PI * 2 * r;\n  const strokeDasharray = `${~~(perimeter * _progress)} ${~~(\n    perimeter *\n    (1 - _progress)\n  )}`;\n  return (\n    <svg className=\"audio-circle-process-bar\">\n      <circle\n        cx={r}\n        cy={r}\n        r={r - 1}\n        fill=\"none\"\n        className=\"stroke\"\n        strokeDasharray={strokeDasharray}\n      />\n      <circle\n        cx={r}\n        cy={r}\n        r={r - 1}\n        fill=\"none\"\n        className=\"bg\"\n        strokeDasharray=\"0 1000\"\n      />\n    </svg>\n  );\n};\n\nconst sliderBaseOptions = {\n  min: 0,\n  step: 0.01,\n  trackStyle: { backgroundColor: \"#000000\" },\n  handleStyle: { backgroundColor: \"#000000\", border: \"2px solid #fff\" }\n};\n\nexport default class ReactJkMusicPlayer extends PureComponent {\n  initPlayId = \"\"; //初始播放id\n  audioListRemoveAnimateTime = 350; // 列表删除动画时间(ms)\n  NETWORK_STATE = {\n    NETWORK_EMPTY: 0, //未初始化\n    NETWORK_IDLE: 1, //未使用网络 304 缓存\n    NETWORK_LOADING: 2, //浏览器正在下载数据\n    NETWORK_NO_SOURCE: 3 //未找到资源\n  };\n  READY_SUCCESS_STATE = 4;\n  state = {\n    currentAudio: {},\n    playId: this.initPlayId, //播放id\n    name: \"\", //当前歌曲名\n    cover: \"\", //当前歌曲封面\n    singer: \"\", //当前歌手\n    musicSrc: \"\", //当前歌曲链\n    currentLyric: \"\",\n    isMobile: IS_MOBILE,\n    toggle: false,\n    pause: true,\n    playing: false,\n    duration: 0,\n    currentTime: 0,\n    isLoop: false,\n    isMute: false,\n    soundValue: 100,\n    isDrag: false, //是否支持拖拽\n    currentX: 0,\n    currentY: 0,\n    moveX: 0,\n    moveY: 0,\n    isMove: false,\n    loading: false,\n    audioListsPanelVisible: false,\n    playModelNameVisible: false,\n    theme: this.darkThemeName,\n    extendsContent: [], //自定义扩展功能按钮\n    playMode: \"\", //当前播放模式\n    currentAudioVolume: 0, //当前音量  静音后恢复到之前记录的音量\n    initAnimate: false,\n    isInitAutoplay: false,\n    isInitRemember: false,\n    loadProgress: 0,\n    removeId: -1,\n    isNeedMobileHack: IS_MOBILE,\n    audioLyricVisible: false\n  };\n  static defaultProps = {\n    currentAudio: {},\n    theme: \"dark\",\n    mode: \"mini\",\n    playModeText: {\n      order: \"order\",\n      orderLoop: \"orderLoop\",\n      singleLoop: \"singleLoop\",\n      shufflePlay: \"shufflePlay\"\n    },\n    defaultPlayMode: \"order\",\n    defaultPosition: {\n      left: 0,\n      top: 0\n    },\n    controllerTitle: <FaHeadphones />,\n    panelTitle: \"PlayList\",\n    closeText: \"close\",\n    openText: \"open\",\n    notContentText: \"no music\",\n    checkedText: \"\",\n    unCheckedText: \"\",\n    once: false, //onAudioPlay 事件  是否只触发一次\n    drag: true,\n    toggleMode: true, //能换在迷你 和完整模式下 互相切换\n    showMiniModeCover: true, //迷你模式下 是否显示封面图\n    showDownload: true,\n    showPlay: true,\n    showReload: true,\n    showPlayMode: true,\n    showThemeSwitch: true,\n    showLyric: false,\n    playModeTipVisible: false, //手机端切换播放模式\n    autoPlay: true,\n    defaultVolume: 100,\n    showProgressLoadBar: true, //音频预加载进度\n    seeked: true,\n    playModeShowTime: 600, //播放模式提示 显示时间,\n    bounds: \"body\", //移动边界\n    showMiniProcessBar: false, //是否在迷你模式 显示进度条\n    loadAudioErrorPlayNext: true, // 加载音频失败时 是否尝试播放下一首\n    preload: false, //是否在页面加载后立即加载音频\n    glassBg: false, //是否是毛玻璃效果\n    remember: false, //是否记住当前播放状态\n    remove: true, //音乐是否可以删除\n    defaultPlayIndex: 0, //默认播放索引\n    emptyLyricPlaceholder: \"NO LYRIC\"\n  };\n  static propTypes = {\n    currentAudio: PropTypes.object.isRequired,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    mode: PropTypes.oneOf([\"mini\", \"full\"]),\n    defaultPlayMode: PropTypes.oneOf([\n      \"order\",\n      \"orderLoop\",\n      \"singleLoop\",\n      \"shufflePlay\"\n    ]),\n    drag: PropTypes.bool,\n    seeked: PropTypes.bool,\n    autoPlay: PropTypes.bool,\n    playModeText: PropTypes.object,\n    panelTitle: PropTypes.string,\n    closeText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    openText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    notContentText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    controllerTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    defaultPosition: PropTypes.shape({\n      top: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      left: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      right: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      bottom: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n    }),\n    onAudioPlay: PropTypes.func,\n    onAudioPause: PropTypes.func,\n    onAudioEnded: PropTypes.func,\n    onAudioAbort: PropTypes.func,\n    onAudioVolumeChange: PropTypes.func,\n    onAudioLoadError: PropTypes.func,\n    onAudioProgress: PropTypes.func,\n    onAudioSeeked: PropTypes.func,\n    onAudioDownload: PropTypes.func,\n    onAudioReload: PropTypes.func,\n    onThemeChange: PropTypes.func,\n    onAudioListsChange: PropTypes.func,\n    onPlayModeChange: PropTypes.func,\n    onModeChange: PropTypes.func,\n    onAudioListsPanelChange: PropTypes.func,\n    onAudioPlayTrackChange: PropTypes.func,\n    onAudioListsDragEnd: PropTypes.func,\n    onAudioLyricChange: PropTypes.func,\n    showDownload: PropTypes.bool,\n    showPlay: PropTypes.bool,\n    showReload: PropTypes.bool,\n    showPlayMode: PropTypes.bool,\n    showThemeSwitch: PropTypes.bool,\n    showMiniModeCover: PropTypes.bool,\n    toggleMode: PropTypes.bool,\n    once: PropTypes.bool,\n    extendsContent: PropTypes.array,\n    checkedText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    unCheckedText: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    defaultVolume: PropTypes.number,\n    playModeShowTime: PropTypes.number,\n    bounds: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    showMiniProcessBar: PropTypes.bool,\n    loadAudioErrorPlayNext: PropTypes.bool,\n    preload: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.oneOf([\"auto\", \"metadata\", \"none\"])\n    ]),\n    glassBg: PropTypes.bool,\n    remember: PropTypes.bool,\n    remove: PropTypes.bool,\n    defaultPlayIndex: PropTypes.number,\n    playIndex: PropTypes.number,\n    emptyLyricPlaceholder: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.object\n    ]),\n    showLyric: PropTypes.bool\n  };\n  constructor(props) {\n    super(props);\n    this.audio = null; //当前播放器\n    this.lightThemeName = \"light\";\n    this.darkThemeName = \"dark\";\n    //模式配置\n    this.toggleModeName = {\n      full: \"full\",\n      mini: \"mini\"\n    };\n    this.targetId = \"music-player-controller\";\n    this.openPanelPeriphery = 1; //移动差值 在 这之间 认为是点击打开panel\n    this.x = 0;\n    this.y = 0;\n    this.isDrag = false;\n\n    const {\n      playModeText: { order, orderLoop, singleLoop, shufflePlay }\n    } = props;\n    //播放模式配置\n    this.PLAY_MODE = {\n      order: {\n        key: \"order\",\n        value: order\n      },\n      orderLoop: {\n        key: \"orderLoop\",\n        value: orderLoop\n      },\n      singleLoop: {\n        key: \"singleLoop\",\n        value: singleLoop\n      },\n      shufflePlay: {\n        key: \"shufflePlay\",\n        value: shufflePlay\n      }\n    };\n    this._PLAY_MODE_ = Object.values(this.PLAY_MODE);\n    this._PLAY_MODE_LENGTH_ = this._PLAY_MODE_.length;\n  }\n  render() {\n    const {\n      className,\n      controllerTitle,\n      closeText,\n      openText,\n      drag,\n      style,\n      showDownload,\n      showPlay,\n      showReload,\n      showPlayMode,\n      showThemeSwitch,\n      checkedText,\n      unCheckedText,\n      toggleMode,\n      showMiniModeCover,\n      extendsContent,\n      defaultPlayMode,\n      seeked,\n      showProgressLoadBar,\n      bounds,\n      defaultPosition,\n      showMiniProcessBar,\n      preload,\n      glassBg,\n    } = this.props;\n\n    const {\n      toggle,\n      playing,\n      duration,\n      currentTime,\n      isMute,\n      soundValue,\n      moveX,\n      moveY,\n      loading,\n      pause,\n      theme,\n      name,\n      cover,\n      singer,\n      musicSrc,\n      isMobile,\n      playMode,\n      playModeTipVisible,\n      playModelNameVisible,\n      loadProgress\n    } = this.state;\n\n    const preloadState =\n      preload === false || preload === \"none\"\n        ? {}\n        : preload === true\n        ? { preload: \"auto\" }\n        : { preload };\n\n    const _playMode_ = this.PLAY_MODE[playMode || defaultPlayMode];\n\n    const currentPlayMode = _playMode_[\"key\"];\n    const currentPlayModeName = _playMode_[\"value\"];\n\n    const isShowMiniModeCover = showMiniModeCover\n      ? {\n          style: {\n            backgroundImage: `url(${cover})`\n          }\n        }\n      : {};\n\n    const _currentTime = formatTime(currentTime);\n    const _duration = formatTime(duration);\n\n    const progressHandler = seeked\n      ? {\n          onChange: this.onHandleProgress,\n          onAfterChange: this.onAudioSeeked\n        }\n      : {};\n    //进度条\n    const ProgressBar = (\n      <Slider\n        max={Math.ceil(duration)}\n        defaultValue={0}\n        value={currentTime}\n        {...progressHandler}\n        {...sliderBaseOptions}\n      />\n    );\n\n    //下载按钮\n    const DownloadComponent = showDownload ? (\n      <span\n        className=\"group audio-download\"\n        {...{ [IS_MOBILE ? \"onTouchStart\" : \"onClick\"]: this.onAudioDownload }}\n      >\n        <Download />\n      </span>\n    ) : (\n      undefined\n    );\n\n    //主题开关\n    const ThemeSwitchComponent = showThemeSwitch ? (\n      <span className=\"group theme-switch\">\n        <Switch\n          className=\"theme-switch-container\"\n          onChange={this.themeChange}\n          checkedChildren={checkedText}\n          unCheckedChildren={unCheckedText}\n          checked={theme === this.lightThemeName}\n        />\n      </span>\n    ) : (\n      undefined\n    );\n\n    //重放\n    const ReloadComponent = showReload ? (\n      <span\n        className=\"group reload-btn\"\n        {...(IS_MOBILE\n          ? { onTouchStart: this.onAudioReload }\n          : { onClick: this.onAudioReload })}\n        key=\"reload-btn\"\n        title=\"Reload\"\n      >\n        <Reload />\n      </span>\n    ) : (\n      undefined\n    );\n\n    //播放模式\n    const PlayModeComponent = showPlayMode ? (\n      <span\n        className={classNames(\"group loop-btn\")}\n        {...(IS_MOBILE\n          ? { onTouchStart: this.togglePlayMode }\n          : { onClick: this.togglePlayMode })}\n        key=\"play-mode-btn\"\n        title={this.PLAY_MODE[currentPlayMode][\"value\"]}\n      >\n        {this.renderPlayModeIcon(currentPlayMode)}\n      </span>\n    ) : (\n      undefined\n    );\n\n    const miniProcessBarR = isMobile ? 30 : 40;\n\n    const AudioController = (\n      <div\n        className={classNames(\"react-jinke-music-player\")}\n        key=\"react-jinke-music-player\"\n        style={defaultPosition}\n      >\n        <div className={classNames(\"music-player\")} key=\"music-player\">\n          {showMiniProcessBar ? (\n            <CircleProcessBar\n              progress={currentTime / duration}\n              r={miniProcessBarR}\n            />\n          ) : (\n            undefined\n          )}\n          <div\n            key=\"controller\"\n            id={this.targetId}\n            className={classNames(\"scale\", \"music-player-controller\", {\n              \"music-player-playing\": this.state.playing\n            })}\n            {...isShowMiniModeCover}\n          >\n            {loading ? (\n              <Load />\n            ) : (\n              <Fragment>\n                <span className=\"controller-title\" key=\"controller-title\">\n                  {controllerTitle}\n                </span>\n                <div key=\"setting\" className=\"music-player-controller-setting\">\n                  {toggle ? closeText : openText}\n                </div>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n\n    return (\n      <div\n        className={classNames(\n          \"react-jinke-music-player-main\",\n          {\n            \"light-theme\": theme === this.lightThemeName,\n            \"dark-theme\": theme === this.darkThemeName\n          },\n          className\n        )}\n        style={style}\n      >\n        {toggle && isMobile ? (\n          <AudioPlayerMobile\n            playing={playing}\n            loading={loading}\n            pause={pause}\n            name={name}\n            singer={singer}\n            cover={cover}\n            themeSwitch={ThemeSwitchComponent}\n            duration={_duration}\n            currentTime={_currentTime}\n            progressBar={ProgressBar}\n            onPlay={this.onPlay}\n            currentPlayModeName={this.PLAY_MODE[currentPlayMode][\"value\"]}\n            playMode={PlayModeComponent}\n            audioNextPlay={this.audioNextPlay}\n            audioPrevPlay={this.audioPrevPlay}\n            playListsIcon={<PlayLists />}\n            reloadIcon={ReloadComponent}\n            downloadIcon={DownloadComponent}\n            nextAudioIcon={<NextAudioIcon />}\n            prevAudioIcon={<PrevAudioIcon />}\n            playIcon={<AnimatePlayIcon />}\n            pauseIcon={<AnimatePauseIcon />}\n            closeIcon={<CloseBtn />}\n            loadingIcon={<Load />}\n            playModeTipVisible={playModeTipVisible}\n            openAudioListsPanel={this.openAudioListsPanel}\n            onClose={this.onHidePanel}\n            extendsContent={extendsContent}\n            glassBg={glassBg}\n          />\n        ) : (\n          undefined\n        )}\n\n        {toggle ? (\n          undefined\n        ) : drag ? (\n          <Draggable\n            bounds={bounds}\n            position={{ x: moveX, y: moveY }}\n            onDrag={this.controllerMouseMove}\n            onStop={this.controllerMouseUp}\n            onStart={this.controllerMouseMove}\n          >\n            {AudioController}\n          </Draggable>\n        ) : (\n          <Fragment>{AudioController}</Fragment>\n        )}\n        {toggle ? (\n          isMobile ? (\n            undefined\n          ) : (\n            <div\n              key=\"panel\"\n              className={classNames(\"music-player-panel\", \"translate\", {\n                \"glass-bg\": glassBg\n              })}\n            >\n              <section className=\"panel-content\" key=\"panel-content\">\n                <div\n                  className={classNames(\"img-content\", \"img-rotate\", {\n                    \"img-rotate-pause\": pause || !playing || !cover\n                  })}\n                  style={{ backgroundImage: `url(${cover})` }}\n                  key=\"img-content\"\n                />\n                <div\n                  className=\"progress-bar-content\"\n                  key=\"progress-bar-content\"\n                >\n                  <span className=\"audio-title\" title={singer}>\n                    {name || ''}\n                  </span>\n                  <section className=\"audio-main\">\n                    <span key=\"current-time\" className=\"current-time\">\n                      {loading ? \"--\" : _currentTime}\n                    </span>\n                    <div className=\"progress-bar\" key=\"progress-bar\">\n                      {showProgressLoadBar ? (\n                        <div\n                          className=\"progress-load-bar\"\n                          key=\"progress-load-bar\"\n                          style={{ width: `${Math.min(loadProgress, 100)}%` }}\n                        />\n                      ) : (\n                        undefined\n                      )}\n\n                      {ProgressBar}\n                    </div>\n                    <span key=\"duration\" className=\"duration\">\n                      {loading ? \"--\" : _duration}\n                    </span>\n                  </section>\n                </div>\n                <div className=\"player-content\" key=\"player-content\">\n                  {/*播放按钮*/}\n                  {loading ? (\n                    <span>\n                      <Load />\n                    </span>\n                  ) : showPlay ? (\n                    <span className=\"group\">\n                      <span\n                        className=\"group play-btn\"\n                        key=\"play-btn\"\n                        ref={node => (this.playBtn = node)}\n                        {...(IS_MOBILE\n                          ? { onTouchStart: this.onPlay }\n                          : { onClick: this.onPlay })}\n                        title={playing ? \"Click to pause\" : \"Click to play\"}\n                      >\n                        {playing ? (\n                          <span>\n                            <AnimatePauseIcon />\n                          </span>\n                        ) : (\n                          <span>\n                            <AnimatePlayIcon />\n                          </span>\n                        )}\n                      </span>\n                      <span\n                        className=\"group next-audio\"\n                        title=\"Next track\"\n                        {...(IS_MOBILE\n                          ? { onTouchStart: this.audioNextPlay }\n                          : { onClick: this.audioNextPlay })}\n                      >\n                        <NextAudioIcon />\n                      </span>\n                    </span>\n                  ) : (\n                    undefined\n                  )}\n\n                  {/*重播*/}\n                  {ReloadComponent}\n                  {/*下载歌曲*/}\n                  {DownloadComponent}\n                  {/* 主题选择 */}\n                  {ThemeSwitchComponent}\n\n                  {/* 自定义扩展按钮 */}\n                  {extendsContent && extendsContent.length >= 1\n                    ? extendsContent.map((content, i) => content)\n                    : undefined}\n\n                  {/*音量控制*/}\n                  <span\n                    className=\"group play-sounds\"\n                    key=\"play-sound\"\n                    title=\"Volume\"\n                  >\n                    {isMute ? (\n                      <span\n                        className=\"sounds-icon\"\n                        {...(IS_MOBILE\n                          ? { onTouchStart: this.onSound }\n                          : { onClick: this.onSound })}\n                      >\n                        <MdVolumeMute />\n                      </span>\n                    ) : (\n                      <span\n                        className=\"sounds-icon\"\n                        {...(IS_MOBILE\n                          ? { onTouchStart: this.onMute }\n                          : { onClick: this.onMute })}\n                      >\n                        <MdVolumeDown />\n                      </span>\n                    )}\n                    <Slider\n                      max={1}\n                      value={soundValue}\n                      onChange={this.audioSoundChange}\n                      className=\"sound-operation\"\n                      {...sliderBaseOptions}\n                    />\n                  </span>\n\n                  {/*播放模式*/}\n                  {PlayModeComponent}\n\n                  {/*收起面板*/}\n                  {toggleMode ? (\n                    <span\n                      className=\"group hide-panel\"\n                      key=\"hide-panel-btn\"\n                      {...(IS_MOBILE\n                        ? { onTouchStart: this.onHidePanel }\n                        : { onClick: this.onHidePanel })}\n                    >\n                      <FaMinusSquareO />\n                    </span>\n                  ) : (\n                    undefined\n                  )}\n                </div>\n              </section>\n              {/* 播放模式提示框 */}\n              <PlayModel\n                visible={playModelNameVisible}\n                value={currentPlayModeName}\n              />\n            </div>\n          )\n        ) : (\n          undefined\n        )}\n        <audio\n          key=\"audio\"\n          className=\"music-player-audio\"\n          {...preloadState}\n          src={musicSrc}\n          ref={node => (this.audio = node)}\n        />\n      </div>\n    );\n  }\n  //播放模式切换\n  togglePlayMode = () => {\n    let index = this._PLAY_MODE_.findIndex(\n      ({ key }) => key === this.state.playMode\n    );\n    const playMode =\n      index === this._PLAY_MODE_LENGTH_ - 1\n        ? this._PLAY_MODE_[0][\"key\"]\n        : this._PLAY_MODE_[++index][\"key\"];\n    this.setState({\n      playMode,\n      playModelNameVisible: true,\n      playModeTipVisible: true\n    });\n    this.props.onPlayModeChange &&\n      this.props.onPlayModeChange(this.PLAY_MODE[playMode]);\n\n    clearTimeout(this.playModelTimer);\n    this.playModelTimer = setTimeout(() => {\n      this.setState({ playModelNameVisible: false, playModeTipVisible: false });\n    }, this.props.playModeShowTime);\n  };\n  //渲染播放模式 对应按钮\n  renderPlayModeIcon = playMode => {\n    let IconNode = \"\";\n    const animateName = \"react-jinke-music-player-mode-icon\";\n    switch (playMode) {\n      case this.PLAY_MODE[\"order\"][\"key\"]:\n        IconNode = <OrderPlayIcon className={animateName} />;\n        break;\n      case this.PLAY_MODE[\"orderLoop\"][\"key\"]:\n        IconNode = <RepeatIcon className={animateName} />;\n        break;\n      case this.PLAY_MODE[\"singleLoop\"][\"key\"]:\n        IconNode = <LoopIcon className={animateName} />;\n        break;\n      case this.PLAY_MODE[\"shufflePlay\"][\"key\"]:\n        IconNode = <ShufflePlayIcon className={animateName} />;\n        break;\n      default:\n        IconNode = <OrderPlayIcon className={animateName} />;\n    }\n    return IconNode;\n  };\n  /**\n   * 音乐列表面板选择歌曲\n   * 上一首 下一首\n   * 音乐结束\n   * 通用方法\n   * @tip: ignore 如果 为 true playId相同则不暂停 可是重新播放 适用于 随机播放 重新播放等逻辑\n   */\n  audioListsPlay = (playId, ignore = false) => {\n    const { playId: currentPlayId, pause, playing, currentAudio } = this.state;\n    if (currentAudio === {}) {\n      /*eslint-disable no-console*/\n      return console.warn(\"Your playlist has no songs. and cannot play !\");\n      /*eslint-disable no-console*/\n    }\n    //如果点击当前项 就暂停 或者播放\n    if (playId === currentPlayId && !ignore) {\n      this.setState({ pause: !pause, playing: !playing });\n      return pause ? this.audio.play() : this._pauseAudio();\n    }\n\n    const { name, cover, musicSrc, singer } = (currentAudio.id === playId ? currentAudio : {});\n\n    const loadAudio = musicSrc => {\n      this.setState(\n        {\n          name,\n          cover,\n          musicSrc,\n          singer,\n          playId,\n          currentTime: 0,\n          duration: 0,\n          playing: false,\n          loading: true,\n          loadProgress: 0\n        },\n        () => {\n          this.audio.load();\n        }\n      );\n      this.props.onAudioPlayTrackChange &&\n        this.props.onAudioPlayTrackChange(\n          playId,\n          [currentAudio],\n          this.getBaseAudioInfo()\n        );\n    };\n\n    switch (typeof musicSrc) {\n      case \"function\":\n        musicSrc().then(originMusicSrc => {\n          loadAudio(originMusicSrc);\n        }, this.onAudioLoadError);\n        break;\n      default:\n        loadAudio(musicSrc);\n    }\n  };\n  resetAudioStatus = () => {\n    this.audio.pause();\n    this.setState({\n      currentTime: 0,\n      duration: 0,\n      loading: false,\n      playing: false,\n      pause: true,\n    });\n    this.initPlayInfo([]);\n  };\n  deleteAudioLists = audioId => e => {\n    e.stopPropagation();\n    //如果不 传 id  删除全部\n    const { playId, currentAudio } = this.state;\n    const newAudioLists = [currentAudio].filter(audio => audio.id !== audioId);\n    if (!audioId) {\n      this.resetAudioStatus();\n    } else {\n      //触发删除动画,等动画结束 删除列表\n      this.setState({ removeId: audioId });\n      setTimeout(() => {\n        this.setState(\n          {\n            removeId: -1\n          },\n          () => {\n            if (newAudioLists.length <= 0) {\n              return this.resetAudioStatus();\n            }\n            // 如果删除的是当前正在播放的 顺延下一首播放\n            if (audioId === playId) {\n              this.handlePlay(this.PLAY_MODE[\"orderLoop\"][\"key\"]);\n            }\n          }\n        );\n      }, this.audioListRemoveAnimateTime);\n    }\n\n    this.props.onAudioListsChange &&\n      this.props.onAudioListsChange(\n        playId,\n        newAudioLists,\n        this.getBaseAudioInfo()\n      );\n  };\n  openAudioListsPanel = () => {\n    this.setState(({ audioListsPanelVisible, initAnimate }) => ({\n      initAnimate: true,\n      audioListsPanelVisible: !audioListsPanelVisible\n    }));\n    this.props.onAudioListsPanelChange &&\n      this.props.onAudioListsPanelChange(!this.state.audioListsPanelVisible);\n  };\n  closeAudioListsPanel = e => {\n    e.stopPropagation();\n    this.setState({ audioListsPanelVisible: false });\n    this.props.onAudioListsPanelChange &&\n      this.props.onAudioListsPanelChange(false);\n  };\n  themeChange = isLight => {\n    const theme = isLight ? this.lightThemeName : this.darkThemeName;\n    this.setState({\n      theme\n    });\n    this.props.onThemeChange && this.props.onThemeChange(theme);\n  };\n  onAudioDownload = () => {\n    const { name, musicSrc } = this.state;\n    if (name && musicSrc) {\n      this.downloadNode = document.createElement(\"a\");\n      this.downloadNode.setAttribute(\"download\", name);\n      this.downloadNode.setAttribute(\"name\", name);\n      this.downloadNode.setAttribute(\"href\", musicSrc);\n      this.downloadNode.click();\n\n      this.props.onAudioDownload &&\n        this.props.onAudioDownload(this.getBaseAudioInfo());\n    }\n  };\n  controllerMouseMove = (e, { deltaX, deltaY }) => {\n    const isMove =\n      Math.abs(deltaX) >= this.openPanelPeriphery ||\n      Math.abs(deltaY) >= this.openPanelPeriphery;\n    this.setState({\n      isMove\n    });\n  };\n  controllerMouseUp = (e, { x, y }) => {\n    if (!this.state.isMove) {\n      if (this.state.isNeedMobileHack) {\n        this.loadAndPlayAudio();\n        this.setState({ isNeedMobileHack: false });\n      }\n      this.openPanel();\n    }\n    this.setState({ moveX: x, moveY: y });\n    return false;\n  };\n  controllerMouseOut = e => {\n    e.preventDefault();\n    this.isDrag = false;\n  };\n  onHandleProgress = value => {\n    this.audio.currentTime = value;\n  };\n  onSound = () => {\n    this.setAudioVolume(this.state.currentAudioVolume);\n  };\n  setAudioVolume = value => {\n    this.audio.volume = value;\n    this.setState({\n      currentAudioVolume: value,\n      soundValue: value\n    });\n  };\n  stopAll = target => {\n    target.stopPropagation();\n    target.preventDefault();\n  };\n  getBoundingClientRect = ele => {\n    const { left, top } = ele.getBoundingClientRect();\n    return {\n      left,\n      top\n    };\n  };\n  //循环播放\n  audioLoop = () => {\n    this.setState(({ isLoop }) => {\n      return {\n        isLoop: !isLoop\n      };\n    });\n  };\n  //重新播放\n  onAudioReload = () => {\n    this.handlePlay(this.PLAY_MODE[\"singleLoop\"][\"key\"]);\n    this.props.onAudioReload &&\n      this.props.onAudioReload(this.getBaseAudioInfo());\n  };\n  openPanel = () => {\n    if (this.props.toggleMode) {\n      this.setState({ toggle: true });\n      this.props.onModeChange &&\n        this.props.onModeChange(this.toggleModeName.full);\n    }\n  };\n  //收起播放器\n  onHidePanel = e => {\n    this.setState({ toggle: false, audioListsPanelVisible: false });\n    this.props.onModeChange &&\n      this.props.onModeChange(this.toggleModeName.mini);\n  };\n  //返回给使用者的 音乐信息\n  getBaseAudioInfo() {\n    const { cover, name, musicSrc, soundValue } = this.state;\n    const {\n      currentTime,\n      duration,\n      muted,\n      networkState,\n      readyState,\n      played,\n      paused,\n      ended,\n      startDate\n    } = this.audio;\n    return {\n      cover,\n      name,\n      musicSrc,\n      volume: soundValue,\n      currentTime,\n      duration,\n      muted,\n      networkState,\n      readyState,\n      played,\n      paused,\n      ended,\n      startDate\n    };\n  }\n  //播放\n  onPlay = () => {\n    if (this.state.playing) {\n      this._pauseAudio();\n    } else {\n      this.loadAndPlayAudio();\n      this.props.onAudioPlay &&\n        this.props.onAudioPlay(this.getBaseAudioInfo());\n    }\n  };\n\n  canPlay = () => {\n    this.setAudioLength();\n    this.loadAndPlayAudio();\n    this.setState({\n      loading: false,\n      playing: this.props.autoPlay\n    });\n  };\n  //暂停\n  _pauseAudio = () => {\n    this.audio.pause();\n    this.setState({ playing: false, pause: true });\n  };\n  onPauseAudio = () => {\n    this.props.onAudioPause && this.props.onAudioPause(this.getBaseAudioInfo());\n  };\n  //加载音频\n  loadAndPlayAudio = () => {\n    const { autoPlay, remember } = this.props;\n    const { isInitAutoplay, isInitRemember, loadProgress } = this.state;\n    const { networkState } = this.audio;\n    const maxLoadProgress = 100;\n    this.setState({ loading: true });\n    if (loadProgress < maxLoadProgress) {\n      this.setState({ loadProgress: loadProgress + 1 });\n    }\n    if (\n      // readyState === this.READY_SUCCESS_STATE &&\n      networkState !== this.NETWORK_STATE.NETWORK_NO_SOURCE\n    ) {\n      const { pause } = this.getLastPlayStatus();\n      const isLastPause = remember && !isInitRemember && pause;\n      const canPlay = isInitAutoplay || autoPlay === true;\n      this.setState(\n        {\n          playing: remember ? !isLastPause : canPlay,\n          loading: false,\n          pause: remember ? isLastPause : !canPlay,\n          loadProgress: maxLoadProgress\n        },\n        () => {\n          if (remember ? !isLastPause : canPlay) {\n            this.audio.play();\n          }\n          this.setState({ isInitAutoplay: true, isInitRemember: true });\n        }\n      );\n    } else {\n      this.onAudioLoadError();\n    }\n  };\n  //设置音频长度\n  setAudioLength = () => {\n    this.setState({\n      duration: this.audio.duration\n    });\n  };\n  onAudioLoadError = e => {\n    const { playMode, playId } = this.state;\n\n    //如果当前音乐加载出错 尝试播放下一首\n    const { loadAudioErrorPlayNext } = this.props;\n    if (loadAudioErrorPlayNext && playId < 0) {\n      this.handlePlay(playMode);\n    }\n\n    const info = this.getBaseAudioInfo();\n    this.props.onAudioLoadError &&\n      this.props.onAudioLoadError({\n        ...e,\n        audioInfo: info,\n        errMsg: this.audio.error || null\n      });\n  };\n  //isNext true 下一首  false\n  /*eslint-disable no-unused-vars */\n  handlePlay = (playMode, isNext = true) => {\n    let IconNode = \"\";\n    let { playId, currentAudio } = this.state;\n    const audioLists = [currentAudio];\n    const audioListsLen = 1;\n    const currentPlayIndex = audioLists.findIndex(audio => audio.id === playId);\n    switch (playMode) {\n      //顺序播放\n      case this.PLAY_MODE[\"order\"][\"key\"]:\n        IconNode = <OrderPlayIcon />;\n        // 拖拽排序后 或者 正常播放 到最后一首歌 就暂停\n        if (currentPlayIndex === audioListsLen - 1) return this._pauseAudio();\n        this.audioListsPlay(\n          isNext\n            ? audioLists[currentPlayIndex + 1].id\n            : audioLists[currentPlayIndex - 1].id\n        );\n        break;\n\n      //列表循环\n      case this.PLAY_MODE[\"orderLoop\"][\"key\"]:\n        IconNode = <RepeatIcon />;\n        if (isNext) {\n          if (currentPlayIndex === audioListsLen - 1) {\n            return this.audioListsPlay(audioLists[0].id);\n          }\n          this.audioListsPlay(audioLists[currentPlayIndex + 1].id);\n        } else {\n          if (currentPlayIndex === 0) {\n            return this.audioListsPlay(audioLists[audioListsLen - 1].id);\n          }\n          this.audioListsPlay(audioLists[currentPlayIndex - 1].id);\n        }\n        break;\n\n      //单曲循环\n      case this.PLAY_MODE[\"singleLoop\"][\"key\"]:\n        IconNode = <LoopIcon />;\n        this.audio.currentTime = 0;\n        this.audioListsPlay(playId, true);\n        break;\n\n      //随机播放\n      case this.PLAY_MODE[\"shufflePlay\"][\"key\"]:\n        {\n          IconNode = <ShufflePlayIcon />;\n          let randomIndex = createRandomNum(0, audioListsLen - 1);\n          const randomPlayId = (audioLists[randomIndex] || {}).id;\n          this.audioListsPlay(randomPlayId, true);\n        }\n        break;\n      default:\n        IconNode = <OrderPlayIcon />;\n    }\n  };\n  /*eslint-disable no-unused-vars */\n  //音频播放结束\n  audioEnd = () => {\n    this.props.onAudioEnded && this.props.onAudioEnded(this.getBaseAudioInfo());\n    this.handlePlay(this.state.playMode);\n  };\n  /**\n   * 上一首 下一首 通用方法\n   * 除随机播放之外 都以  点击了上一首或者下一首 则以列表循环的方式 顺序放下一首歌\n   * 参考常规播放器的逻辑\n   */\n  audioPrevAndNextBasePlayHandle = (isNext = true) => {\n    this.props.audioPrevAndNextBasePlayHandle(isNext);\n    this.handlePlay(this.PLAY_MODE[\"shufflePlay\"][\"key\"], isNext);\n  };\n  //上一首\n  audioPrevPlay = () => {\n    this.audioPrevAndNextBasePlayHandle(false);\n  };\n  //下一首\n  audioNextPlay = () => {\n    this.audioPrevAndNextBasePlayHandle(true);\n  };\n  //播放进度更新\n  audioTimeUpdate = () => {\n    const currentTime = this.audio.currentTime;\n    this.setState({ currentTime });\n    if (this.props.remember) {\n      this.saveLastPlayStatus();\n    }\n    this.props.onAudioProgress &&\n      this.props.onAudioProgress(this.getBaseAudioInfo());\n  };\n  //音量改变\n  audioSoundChange = value => {\n    this.setAudioVolume(value);\n  };\n  onAudioVolumeChange = () => {\n    this.setState({ isMute: this.audio.volume <= 0 });\n    this.props.onAudioVolumeChange &&\n      this.props.onAudioVolumeChange(this.audio.volume);\n  };\n  onAudioPlay = () => {\n    this.setState({ playing: true, loading: false });\n    this.props.onAudioPlay && this.props.onAudioPlay(this.getBaseAudioInfo());\n  };\n  //进度条跳跃\n  onAudioSeeked = () => {\n    if (this.state.playing) {\n        this.loadAndPlayAudio();\n        setTimeout(() => {\n          this.setState({ playing: true });\n        });\n    }\n    this.props.onAudioSeeked &&\n      this.props.onAudioSeeked(this.getBaseAudioInfo());\n  };\n  //静音\n  onMute = () => {\n    this.setState(\n      {\n        isMute: true,\n        soundValue: 0,\n        currentAudioVolume: this.audio.volume\n      },\n      () => {\n        this.audio.volume = 0;\n      }\n    );\n  };\n  //加载中断\n  onAudioAbort = e => {\n    const audioInfo = this.getBaseAudioInfo();\n    const _err = Object.assign({}, e, audioInfo);\n    this.props.onAudioAbort && this.props.onAudioAbort(_err);\n    this.audio.pause();\n    this.audio.play();\n  };\n  //切换播放器模式\n  toggleMode = mode => {\n    if (mode === this.toggleModeName[\"full\"]) {\n      this.setState({ toggle: true });\n    }\n  };\n  //列表拖拽排序\n  audioListsDragEnd = (fromIndex, toIndex) => {\n    const { playId, currentAudio } = this.state;\n    const _audioLists = [currentAudio];\n    const item = _audioLists.splice(fromIndex, 1)[0];\n    _audioLists.splice(toIndex, 0, item);\n\n    //如果拖动正在播放的歌曲 播放Id 等于 拖动后的index\n    let _playId = fromIndex === playId ? toIndex : playId;\n\n    this.setState({ audioLists: _audioLists, playId: _playId });\n\n    this.props.onAudioListsDragEnd &&\n      this.props.onAudioListsDragEnd(fromIndex, toIndex);\n\n    this.props.onAudioListsChange &&\n      this.props.onAudioListsChange(\n        _playId,\n        _audioLists,\n        this.getBaseAudioInfo()\n      );\n  };\n  saveLastPlayStatus = () => {\n    const {\n      currentTime,\n      playId,\n      duration,\n      theme,\n      soundValue,\n      playMode,\n      name,\n      cover,\n      singer,\n      musicSrc,\n      pause\n    } = this.state;\n    const lastPlayStatus = JSON.stringify({\n      currentTime,\n      playId,\n      duration,\n      theme,\n      playMode,\n      soundValue,\n      name,\n      cover,\n      singer,\n      musicSrc,\n      pause\n    });\n    localStorage.setItem(\"lastPlayStatus\", lastPlayStatus);\n  };\n  getLastPlayStatus = () => {\n    const { theme, defaultPlayMode, defaultPlayIndex } = this.props;\n\n    let status = {\n      currentTime: 0,\n      duration: 0,\n      playMode: defaultPlayMode,\n      name: \"\",\n      cover: \"\",\n      singer: \"\",\n      musicSrc: \"\",\n      playId: this.getDefaultPlayId(),\n      theme,\n      pause: false\n    };\n    try {\n      return JSON.parse(localStorage.getItem(\"lastPlayStatus\")) || status;\n    } catch (error) {\n      return status;\n    }\n  };\n  mockAutoPlayForMobile = () => {\n    if (this.props.autoPlay && !this.state.playing && this.state.pause) {\n      this.audio.load();\n      this.audio.pause();\n      this.audio.play();\n    }\n  };\n  bindMobileAutoPlayEvents = () => {\n    document.addEventListener(\n      \"touchstart\",\n      () => {\n        this.mockAutoPlayForMobile();\n      },\n      { once: true }\n    );\n    //监听微信准备就绪事件\n    document.addEventListener(\"WeixinJSBridgeReady\", () => {\n      this.mockAutoPlayForMobile();\n    });\n  };\n  bindSafariAutoPlayEvents = () => {\n    document.addEventListener(\n      \"click\",\n      () => {\n        this.mockAutoPlayForMobile();\n      },\n      { once: true }\n    );\n  };\n  unBindEvents = (...options) => {\n    this.bindEvents(...options);\n  };\n  /**\n   * 绑定 audio 标签 事件\n   */\n  bindEvents = (\n    target = this.audio,\n    eventsNames = {\n      waiting: this.loadAndPlayAudio,\n      canplay: this.canPlay,\n      error: this.onAudioLoadError,\n      ended: this.audioEnd,\n      seeked: this.onAudioSeeked,\n      pause: this.onPauseAudio,\n      play: this.onAudioPlay,\n      timeupdate: this.audioTimeUpdate,\n      volumechange: this.onAudioVolumeChange,\n      stalled: this.onAudioLoadError, //当浏览器尝试获取媒体数据，但数据不可用时\n      abort: this.onAudioAbort\n    },\n    bind = true\n  ) => {\n    const { once } = this.props;\n    for (let name in eventsNames) {\n      const _events = eventsNames[name];\n      bind\n        ? target.addEventListener(name, _events, {\n            once: !!(once && name === \"play\")\n          })\n        : target.removeEventListener(name, _events);\n    }\n  };\n  getPlayInfo = (audioLists = []) => {\n    const newAudioLists = audioLists.filter(audio => !audio[\"id\"]);\n    const lastAudioLists = audioLists.filter(audio => audio[\"id\"]);\n    const _audioLists = [\n      ...lastAudioLists,\n      ...newAudioLists.map(info => {\n        return {\n          ...info,\n          id: uuId()\n        };\n      })\n    ];\n    console.log('// // ', _audioLists, audioLists)\n    const playIndex = 0;\n    const playId = this.state.playId || _audioLists[playIndex].id;\n    const { name = \"\", cover = \"\", singer = \"\", musicSrc = \"\" } =\n      _audioLists.find(({ id }) => id === playId) || {};\n    return {\n      name,\n      cover,\n      singer,\n      musicSrc,\n      currentAudio: _audioLists.pop(),\n      playId\n    };\n  };\n  initPlayInfo = (audioLists, cb) => {\n    const info = this.getPlayInfo(audioLists);\n\n    switch (typeof info.musicSrc) {\n      case \"function\":\n        info.musicSrc().then(originMusicSrc => {\n          this.setState({ ...info, musicSrc: originMusicSrc }, cb);\n        }, this.onAudioLoadError);\n        break;\n      default:\n        this.setState(info, cb);\n    }\n  };\n  listenerIsMobile = ({ matches }) => {\n    this.setState({\n      isMobile: !!matches\n    });\n  };\n  addMobileListener = () => {\n    this.media = window.matchMedia(\n      \"(max-width: 768px) and (orientation : portrait)\"\n    );\n    this.media.addListener(this.listenerIsMobile);\n  };\n  setDefaultAudioVolume = () => {\n    const { defaultVolume, remember } = this.props;\n    //音量 [0-100]\n    this.defaultVolume = Math.max(0, Math.min(defaultVolume, 100)) / 100;\n    const { soundValue = this.defaultVolume } = this.getLastPlayStatus();\n    this.setAudioVolume(remember ? soundValue : this.defaultVolume);\n  };\n  getDefaultPlayId = (audioLists = [this.props.currentAudio]) => {\n    const playIndex = Math.max(\n      0,\n      Math.min(audioLists.length, this.props.defaultPlayIndex)\n    );\n    if (audioLists.length === 0) {\n      return uuId();\n    }\n    return audioLists[playIndex].id;\n  };\n  //当父组件 更新 props 时 如 audioLists 改变 更新播放信息\n  componentWillReceiveProps({ currentAudio, playIndex }) {\n    if (currentAudio !== this.props.currentAudio) {\n      const newAudioLists = [\n        ...[this.state.currentAudio],\n        ...[currentAudio].filter(\n          (audio, i) =>\n            [this.state.currentAudio].findIndex(\n              v => v.musicSrc === audio.musicSrc\n            ) === -1\n        )\n      ];\n      this.initPlayInfo(newAudioLists);\n      this.bindEvents(this.audio);\n      this.props.onAudioListsChange &&\n        this.props.onAudioListsChange(\n          this.state.playId,\n          [currentAudio],\n          this.getBaseAudioInfo()\n        );\n    } else {\n      // 播放索引 改变\n      const currentPlayIndex = [this.state.currentAudio].findIndex(\n        audio => audio.id === this.state.playId\n      );\n      if (currentPlayIndex !== playIndex) {\n        const currentPlay = this.state.currentAudio;\n        if (currentPlay && currentPlay.id) {\n          this.audioListsPlay(currentPlay.id, true);\n        }\n      }\n    }\n}\n  //合并state 更新初始值\n  componentWillMount() {\n    const {\n      mode,\n      currentAudio,\n      defaultPlayMode,\n      remember,\n      theme,\n      defaultPlayIndex\n    } = this.props;\n\n    //切换 'mini' 或者 'full' 模式\n    this.toggleMode(mode);\n\n    const info = this.getPlayInfo([currentAudio]);\n    const lastPlayStatus = remember\n      ? this.getLastPlayStatus(defaultPlayIndex)\n      : { playMode: defaultPlayMode, theme };\n\n    switch (typeof info.musicSrc) {\n      case \"function\":\n        info.musicSrc().then(val => {\n          this.setState({\n            ...info,\n            musicSrc: val,\n            ...lastPlayStatus\n          });\n        }, this.onAudioLoadError);\n        break;\n      default:\n        this.setState({\n          ...info,\n          ...lastPlayStatus\n        });\n    }\n  }\n  componentWillUnmount() {\n    this.unBindEvents(this.audio, undefined, false);\n    this.media.removeListener(this.listenerIsMobile);\n    this.media = undefined;\n  }\n  componentDidMount() {\n    this.addMobileListener();\n    this.setDefaultAudioVolume();\n    this.bindEvents(this.audio);\n    if (IS_MOBILE) {\n      this.bindMobileAutoPlayEvents();\n    }\n    if (!IS_MOBILE && isSafari()) {\n      this.bindSafariAutoPlayEvents();\n    }\n  }\n}\n","\nimport React from \"react\";\nimport ReactJkMusicPlayer from \"./react-music-player/src/\";\nimport swal from 'sweetalert'\nimport { FaSignOut, FaHeadphones, FaYoutube, FaSearch } from \"react-icons/lib/fa/\";\nimport { FaPlayCircle }from \"react-icons/lib/fa/\";\n\nimport $ from \"jquery\";\nimport isMobile from \"is-mobile\";\nimport MaterialTable from \"material-table\";\n\nimport \"./react-music-player/assets/index.css\";\nimport \"./App.css\";\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { uuId } from \"./utils\";\n\n/*eslint-disable no-console*/\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst options = {\n  //audio lists model\n  currentAudio: {musicSrc: ''},\n  defaultPlayIndex: 0,\n  playIndex: 0,\n  theme: \"light\",\n  bounds: \"body\",\n  preload: true,\n  glassBg: true,\n  remember: false,\n  remove: false,\n  openText: \"open\",\n  closeText: \"close\",\n  checkedText: \"-\",\n  unCheckedText: \"+\",\n  notContentText: \"no music\",\n  panelTitle: \"humppakone.com\",\n  defaultPlayMode: \"order\",\n  mode: \"full\",\n  once: true,\n  autoPlay: false,\n  toggleMode: false,\n  showMiniModeCover: true,\n  showMiniProcessBar: true,\n  drag: false,\n  seeked: true,\n  controllerTitle: <FaHeadphones />,\n  showProgressLoadBar: true,\n  showPlay: true,\n  showReload: true,\n  showDownload: true,\n  showPlayMode: false,\n  showThemeSwitch: false,\n  extendsContent: [],\n  defaultVolume: 100,\n  playModeShowTime: 600,\n  loadAudioErrorPlayNext: true,\n  apiRoot: localStorage.devserver || 'https://api.humppakone.com',\n  authToken: localStorage.getItem('auth_token'),\n  xhrRand: [],\n  fetchingNext: false,\n  showSearchModal: false\n};\n\n\nclass App extends React.PureComponent {\n  constructor() {\n    super();\n    console.log(this.state.params.authToken)\n  }\n  componentDidMount() {\n    if (this.state.params.authToken) {\n      this.playNext();\n    }\n  }\n  state = {\n    params: options\n  };\n  onLogin = (e) => {\n    e.preventDefault();\n    const username = $('#username').val(),\n          password = $('#password').val();\n    $.ajax({\n      url: this.state.params.apiRoot + '/login/',\n      data: {\n        username: username,\n        password: password\n      },\n      dataType: 'json',\n      method: 'POST'\n    })\n    .done(this.onLoginSuccess)\n    .fail(this.onLoginFail);\n  };\n  onLoginSuccess = (response) => {\n    const data = {\n      ...this.state.params,\n      authToken: response.token\n    }\n    this.setState({\n      params: data\n    });\n    localStorage.setItem('auth_token', response.token);\n    console.log('Login successful');\n    this.fetchRandomSong();\n  }\n  onLoginFail = () => {\n    swal('Login Error');\n  }\n  fetchRandomSong = (autoplay=false) => {\n    const jqXhr = $.ajax({\n        url: this.state.params.apiRoot + '/songs/random?t='+(+new Date()),\n        method: 'GET',\n        dataType: 'json',\n        headers: {\n            Authorization: 'Token ' + this.state.params.authToken\n        }\n    })\n    .done((r)=>this.onRandomSongLoaded(r, autoplay))\n    .fail(this.onAjaxFail);\n    const xhrRand = this.state.params.xhrRand;\n    xhrRand.push(jqXhr);\n    const newXhrRand = xhrRand.filter(xhr => xhr.readyState !== 4);\n\n    const data = {\n      ...this.state.params,\n      xhrRand: newXhrRand,\n      fetchingNext: true,\n    }\n    this.setState({\n      params: data\n    });\n  };\n  onfetchingError = (e) => {\n    const data = {\n      ...this.state.params,\n      fetchingNext: false\n    };\n    this.setState({\n      params: data\n    });\n    this.onAjaxFail(e);\n  }\n  clearAuthToken = () => {\n    const data = {\n      ...this.state.params,\n      authToken: null\n    };\n    localStorage.setItem('auth_token', '');\n    this.setState({\n      params: data\n    });\n  }\n  onLogout = (e) => {\n    e.preventDefault();\n    this.clearAuthToken();\n    $.ajax({\n      url: this.state.params.apiRoot + '/logout/',\n      method: 'POST',\n      headers: {\n          Authorization: 'Token ' + this.state.params.authToken\n      }\n    })\n    .done(e => console.log('Logged out, token removed'));\n  }\n  onYoutubeDlPrompt = async () => {\n    const url = await swal(\"Youtube URL:\", {\n      content: \"input\",\n    })\n    console.log(url);\n    let videoId = null;\n    const ytVideoIdRe = [\n      {pos: 1, re: /^([a-zA-Z0-9_-]{11})$/},\n      {pos: 4, re: /^(https?:\\/\\/)?(www\\.|m\\.)?youtube\\.com\\/watch\\?(.*&)?v=([a-zA-Z0-9_-]{11})(&.*)?#?$/},\n      {pos: 2, re: /^(https?:\\/\\/)?youtu\\.be\\/([a-zA-Z0-9_-]{11})(\\?.*)?#?$/}\n    ];\n    if (!url) {\n      return;\n    }\n    videoId = ytVideoIdRe.map(function(re) {\n      if (re.re.test(url)) {\n        return url.match(re.re)[re.pos];\n      }\n      return null;\n    }).filter(el => !!el)[0];\n    if (videoId) {\n      console.log('Sending intent to download video ' + videoId);\n      $.ajax(\n        {\n          url: this.state.params.apiRoot + '/youtube-dl/',\n          data: {\n            v: videoId\n          },\n          type: 'POST',\n          headers: {\n            Authorization: 'Token ' + this.state.params.authToken\n          }\n        }\n      )\n      .done(response => console.log('task id: ' + response.task_id))\n      .fail(e => this.onYoutubeFail(e, videoId));\n    } else {\n      swal('Error', 'Invalid Youtube URL', 'error');\n    }   \n  }\n  onYoutubeFail = (e, videoId) => {\n    if (e.status === 401) {\n      this.clearAuthToken();\n    } else {\n      swal('Oops!', 'Youtube download ' + videoId + ' did not go through...', 'error');\n    }\n  }\n  onAjaxFail = (e) => {\n    if (e.status === 401) {\n      const data = {\n        ...this.state.params,\n        authToken: null\n      };\n      this.setState({\n        params: data\n      });\n    }\n  }\n  onRandomSongLoaded = (songInfo, autoplay) => {\n    const data = {\n      ...this.state.params,\n      currentAudio: {\n        musicSrc: songInfo.download_url + '.mp3?auth_token=' + this.state.params.authToken,\n        singer: songInfo.filename,\n        cover: songInfo.download_url + '.jpg?auth_token=' + this.state.params.authToken,\n        name: songInfo.filename.split('/').pop(),\n\n      },\n      fetchingNext: false,\n    };\n    console.log('GOTCHA!!!')\n    this.setState({\n      params: data\n    });\n  }\n  playNext = () => {\n    console.log('NEXT!!!')\n    const data = {\n      ...this.state.params,\n      currentAudio: {musicSrc:''},\n      playId: -1\n    };\n    this.setState({\n      params: data\n    });\n    if (!this.state.params.fetchingNext) {\n      this.fetchRandomSong(true)\n      console.log('FETCH!!!')\n    }\n  }\n  playById = (currentPlayId, audioList, audioInfo) => {\n    const data = {\n      ...this.state.params,\n      playId: audioInfo.id\n    };\n    this.setState({\n      params: data\n    });\n  }\n  onSearchPrompt = () => {\n    const data = {\n      ...this.state.params,\n      showSearchModal: !this.state.params.showSearchModal,\n    };\n    this.setState({\n      params: data\n    });\n  }\n\n  render() {\n    const { params } = this.state;\n    const extendComponents = ([\n      <span\n        key='search'\n        className=\"group song-search\"\n        {...{ [isMobile() ? \"onTouchStart\" : \"onClick\"]: this.onSearchPrompt.bind(this) }}\n      >\n        <FaSearch />\n      </span>,\n      <span\n        key='yt_dl'\n        className=\"group youtube-download\"\n        {...{ [isMobile() ? \"onTouchStart\" : \"onClick\"]: this.onYoutubeDlPrompt.bind(this) }}\n      >\n        <FaYoutube />\n      </span>,\n      <span\n        key='signout'\n        className=\"group user-logout\"\n        {...{ [isMobile() ? \"onTouchStart\" : \"onClick\"]: this.onLogout.bind(this) }}\n      >\n        <FaSignOut />\n      </span>,\n    ]);\n\n    return (\n      <div>\n        <video poster=\"/background.jpg\" className=\"bgVideo\" playsInline autoPlay muted loop>\n          <source src=\"/background.av1.mp4\" type=\"video/mp4; codecs=av01.0.05M.08\"/>\n          <source src=\"/background.mp4\" type=\"video/mp4\"/>\n          <source src=\"/background.webm\" type=\"video/webm\"/>\n        </video>\n        <div class=\"videoCover\"></div>\n        { !params.authToken && <div id=\"login\">\n          <form id=\"loginForm\" onSubmit={this.onLogin}>\n            <div id=\"usernameInputWrapper\"><input type=\"text\" id=\"username\" placeholder=\"Username\" /></div>\n            <div id=\"passwordInputWrapper\"><input type=\"password\" id=\"password\" placeholder=\"Password\" /></div>\n            <div><button type=\"submit\" id=\"loginBtn\"><i className=\"fas fa-sign-in-alt fa-fw\"></i> Login</button> <small>v2019081600</small></div>\n          </form>\n        </div>}\n        {params.authToken && <ReactJkMusicPlayer \n          {...params}\n          audioPrevAndNextBasePlayHandle={(next) => {next && this.playNext()}}\n          onAudioEnded={this.playNext}\n          onAudioLoadError={err=>{if(err.errMsg)this.playNext()}}\n          onAudioListsChange={this.playById}\n          extendsContent={extendComponents}\n        />}\n        { params.showSearchModal &&\n        <div style={{\n            marginBottom: '100px',\n            position: 'fixed',\n            zIndex: 1000,\n            left: '0',\n            top: '5%',\n            bottom: '5%',\n            width: '100%',\n            overflow: 'auto'\n\n          }}>\n            <div style={{\n              position: 'relative',\n              width:'90%',\n              left: '5%',\n            }}>\n          <MaterialTable \n            className={'searchTable'}  \n            icons={tableIcons}\n            title=\"Search Your Files\"\n            columns={[\n            { \n              title: 'Title',\n              field: 'filename',\n              type: 'string',\n              render: rowData => (\n                <span\n                 title={rowData.filename}\n                 onClick={()=>this.onRandomSongLoaded(rowData)}\n                >\n                  <img\n                    style={{ height: 36, borderRadius: '50%', verticalAlign: 'middle' }}\n                    alt='cover'\n                    src={rowData.download_url  + '.jpg?auth_token=' + this.state.params.authToken}\n                  /> {rowData.filename.split('/').pop()}\n                </span>\n              )\n            },\n          ]}\n          data={async query => {\n            const result = await $.ajax({\n              url: this.state.params.apiRoot + '/songs/',\n              data: {q:query.search},\n              method: 'GET',\n              dataType: 'json',\n              headers: {\n                Authorization: 'Token ' + this.state.params.authToken\n              }\n            });\n            return {\n              data: result.slice(query.page*query.pageSize, (query.page+1)*query.pageSize),\n              page: query.page,\n              totalCount: result.length,\n            }\n          }}\n          actions={[\n            {\n              icon: FaPlayCircle,\n              tooltip: 'Play',\n              onClick: (event, rowData) => this.onRandomSongLoaded(rowData)\n            }\n          ]}\n        />\n        </div>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}